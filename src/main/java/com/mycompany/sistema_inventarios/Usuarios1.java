/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.sistema_inventarios;

import Modelo.Usuario;
import Modelo.UsuarioDAO;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jorge
 */
public class Usuarios1 extends javax.swing.JPanel {

    /**
     * Creates new form Usuarios1
     */
    
    private DefaultTableModel modeloTabla;
    public Usuarios1() {
        initComponents();
        modeloTabla = (DefaultTableModel) tabla.getModel();
        cargarUsuarios();
    }
    public void setModeloTabla(DefaultTableModel modelo) {
    this.modeloTabla = modelo;
    }
public void cargarUsuarios() {
    // Limpiar la tabla antes de cargar nuevos datos
    modeloTabla.setRowCount(0);

    // Obtener la lista de usuarios desde el DAO
    UsuarioDAO usuarioDAO = new UsuarioDAO();
    List<Usuario> usuarios = usuarioDAO.obtenerUsuarios();

    // Llenar la tabla con los datos de los usuarios
    for (Usuario usuario : usuarios) {
        Object[] fila = {
            usuario.getCodigo(),
            usuario.getNombre(),
            usuario.getApellido(),
            usuario.getTelefono(),
            usuario.getEmail(),
            usuario.getNombreusuario(),
            usuario.getContraseña()
        };
        modeloTabla.addRow(fila);  // Aquí usamos modeloTabla en lugar de modelo
    }
}
private void eliminarUsuario(String codigoUsuario) {
    try {
        // Configurar la conexión a la base de datos (ajusta la URL, usuario y contraseña)
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventarios", "root", "");

        // Consulta SQL para la eliminación de datos
        String sql = "DELETE FROM usuario WHERE cod_usuario = ?";

        // Crear la declaración preparada
        try (PreparedStatement pstmt = con.prepareStatement(sql)) {
            // Establecer el parámetro
            pstmt.setString(1, codigoUsuario);

            // Ejecutar la actualización
            pstmt.executeUpdate();
        }

        // Cerrar la conexión
        con.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
        // Manejar la excepción según tus necesidades
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btneliminar = new javax.swing.JButton();
        btneditar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnlista = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btneliminar.setText("Eliminar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btneliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 120, 50));

        btneditar.setText("Editar");
        btneditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditarActionPerformed(evt);
            }
        });
        jPanel1.add(btneditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 120, 50));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Apellido", "telefono", "Email", "Usuario", "Contraseña"
            }
        ));
        jScrollPane2.setViewportView(tabla);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 700, 290));

        btnlista.setText("Nuevo Usuario");
        btnlista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlistaActionPerformed(evt);
            }
        });
        jPanel1.add(btnlista, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 130, 50));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 730, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
       // Obtener la fila seleccionada
    int filaSeleccionada = tabla.getSelectedRow();

    // Verificar si hay una fila seleccionada
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Obtener el código de usuario de la fila seleccionada
    String codigoUsuario = tabla.getValueAt(filaSeleccionada, 0).toString();

    // Confirmar la eliminación
    int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar el usuario?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
    if (opcion == JOptionPane.YES_OPTION) {
        // Llamar al método para eliminar el usuario en la base de datos
        eliminarUsuario(codigoUsuario);

        // Actualizar la tabla después de la eliminación
        cargarUsuarios();
    } 
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btneditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btneditarActionPerformed

    private void btnlistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlistaActionPerformed
        SwingUtilities.getWindowAncestor(this).dispose();

    }//GEN-LAST:event_btnlistaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btneditar;
    public javax.swing.JButton btneliminar;
    public javax.swing.JButton btnlista;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
